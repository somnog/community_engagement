name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: |
            admin-dashboard/node_modules
            track-backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build and Start Docker Compose Services
        run: |
          docker-compose up -d --build

      - name: Wait for Services to Be Ready
        run: |
          echo "Waiting for API to be healthy..."
          docker-compose exec -T api bash -c "
            until curl -s http://localhost:5000/health; do
              echo 'Waiting for API...';
              sleep 5;
            done
          "
          echo "API is healthy."

      - name: Run API Tests
        run: |
          docker-compose exec -T api npm test

      - name: Run Portal Tests
        run: |
          docker-compose exec -T portal npm test

      - name: Shut Down Docker Compose Services
        if: always()
        run: docker-compose down
